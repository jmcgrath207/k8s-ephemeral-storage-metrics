apiVersion: apps/v1
kind: {{ .Values.deploy_type  }}
metadata:
  name: k8s-ephemeral-storage-metrics
  namespace: {{ .Release.Namespace }}
  labels:
  {{- include "chart.labels" . | nindent 4 }}
spec:
  {{- if eq .Values.deploy_type "Deployment" }}
  replicas: 1
  {{- end }}
  selector:
    matchLabels:
  {{- include "chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
      {{- include "chart.labels" . | nindent 8 }}
      annotations:
      {{- toYaml .Values.podAnnotations | nindent 8 }}
    spec:
      serviceAccountName: k8s-ephemeral-storage-metrics
      nodeSelector:
      {{- toYaml .Values.nodeSelector | nindent 8 }}
      containers:
        - name: metrics
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.imagePullPolicy }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          ports:
            - name: metrics
              containerPort: 9100
              protocol: TCP
            {{ if .Values.dev.enabled }}
            - name: debug
              containerPort: 30002
              protocol: TCP
              {{ end }}
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /metrics
              port: 9100
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          readinessProbe:
            failureThreshold: 10
            httpGet:
              path: /metrics
              port: 9100
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          env:
            - name: DEPLOY_TYPE
              value: "{{ .Values.deploy_type }}"
            - name: SCRAPE_INTERVAL
              value: "{{ .Values.interval }}"
            - name: MAX_NODE_CONCURRENCY
              value: "{{ .Values.max_node_concurrency }}"
            - name: LOG_LEVEL
              value: "{{ .Values.log_level }}"
              {{- if .Values.metrics.ephemeral_storage_pod_usage }}
            - name: EPHEMERAL_STORAGE_POD_USAGE
              value: "{{ .Values.metrics.ephemeral_storage_pod_usage }}"
              {{- end }}
              {{- if .Values.metrics.ephemeral_storage_node_available }}
            - name: EPHEMERAL_STORAGE_NODE_AVAILABLE
              value: "{{ .Values.metrics.ephemeral_storage_node_available }}"
              {{- end }}
              {{- if .Values.metrics.ephemeral_storage_node_capacity }}
            - name: EPHEMERAL_STORAGE_NODE_CAPACITY
              value: "{{ .Values.metrics.ephemeral_storage_node_capacity }}"
              {{- end }}
              {{- if .Values.metrics.ephemeral_storage_node_percentage }}
            - name: EPHEMERAL_STORAGE_NODE_PERCENTAGE
              value: "{{ .Values.metrics.ephemeral_storage_node_percentage }}"
              {{- end }}
              {{- if .Values.metrics.adjusted_polling_rate }}
            - name: ADJUSTED_POLLING_RATE
              value: "{{ .Values.metrics.adjusted_polling_rate }}"
              {{- end }}
              {{- if eq .Values.deploy_type  "DaemonSet" }}
            - name: CURRENT_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
              {{- end }}

